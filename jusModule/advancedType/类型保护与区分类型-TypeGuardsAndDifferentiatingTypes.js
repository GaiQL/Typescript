function isFish(pet) {
    return pet.swim !== undefined;
}
if (isFish(pet)) {
    pet.swim();
}
else {
    pet.fly();
}
function isNumber(x) {
    return typeof x === "number";
}
function isString(x) {
    return typeof x === "string";
}
var SpaceRepeatingPadder = (function () {
    function SpaceRepeatingPadder(numSpaces) {
        this.numSpaces = numSpaces;
    }
    SpaceRepeatingPadder.prototype.getPaddingString = function () {
        return Array(this.numSpaces + 1).join(" ");
    };
    return SpaceRepeatingPadder;
}());
var StringPadder = (function () {
    function StringPadder(value) {
        this.value = value;
    }
    StringPadder.prototype.getPaddingString = function () {
        return this.value;
    };
    return StringPadder;
}());
function getRandomPadder() {
    return Math.random() < 0.5 ?
        new SpaceRepeatingPadder(4) :
        new StringPadder("  ");
}
var padder = getRandomPadder();
if (padder instanceof SpaceRepeatingPadder) {
}
if (padder instanceof StringPadder) {
}
var foo = '123';
foo = null;
function broken(name) {
    function postfix(epithet) {
        return name.charAt(0) + '.  the ' + epithet;
    }
    name = name || "Bob";
    return postfix("great");
}
broken(null);
var TryTree = (function () {
    function TryTree() {
    }
    return TryTree;
}());
var people;
var s = people.name;
var s = people.next.name;
var s = people.next.next.name;
var s = people.next.next.next.name;
var UIElement = (function () {
    function UIElement() {
    }
    UIElement.prototype.animate = function (dx, dy, easing) {
        if (easing === "123") {
        }
        else if (easing === "321") {
        }
        else if (easing === "嘿嘿嘿") {
        }
    };
    return UIElement;
}());
var UIElementObj = new UIElement();
UIElementObj.animate(123, 321, '123');
function strFun(str) {
    if (str == '111') {
        return str;
    }
    else if (str == '222') {
        return str;
    }
}
function rollDie() {
    return 1;
}
function foo____(x) {
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoi57G75Z6L5L+d5oqk5LiO5Yy65YiG57G75Z6LLVR5cGVHdWFyZHNBbmREaWZmZXJlbnRpYXRpbmdUeXBlcy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL2FkdmFuY2VkVHlwZS/nsbvlnovkv53miqTkuI7ljLrliIbnsbvlnostVHlwZUd1YXJkc0FuZERpZmZlcmVudGlhdGluZ1R5cGVzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQVNBLGdCQUFpQixHQUFhO0lBQzVCLE1BQU0sQ0FBUSxHQUFJLENBQUMsSUFBSSxLQUFLLFNBQVMsQ0FBQztBQUN4QyxDQUFDO0FBSUQsRUFBRSxDQUFDLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUNkLEdBQUcsQ0FBQyxJQUFJLEVBQUUsQ0FBQztBQUNmLENBQUM7QUFDRCxJQUFJLENBQUMsQ0FBQztJQUNGLEdBQUcsQ0FBQyxHQUFHLEVBQUUsQ0FBQztBQUNkLENBQUM7QUFTRCxrQkFBa0IsQ0FBTTtJQUNwQixNQUFNLENBQUMsT0FBTyxDQUFDLEtBQUssUUFBUSxDQUFDO0FBQ2pDLENBQUM7QUFFRCxrQkFBa0IsQ0FBTTtJQUNwQixNQUFNLENBQUMsT0FBTyxDQUFDLEtBQUssUUFBUSxDQUFDO0FBQ2pDLENBQUM7QUFXRDtJQUNJLDhCQUFvQixTQUFpQjtRQUFqQixjQUFTLEdBQVQsU0FBUyxDQUFRO0lBQUksQ0FBQztJQUMxQywrQ0FBZ0IsR0FBaEI7UUFDSSxNQUFNLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxTQUFTLEdBQUcsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBQy9DLENBQUM7SUFDTCwyQkFBQztBQUFELENBQUMsQUFMRCxJQUtDO0FBRUQ7SUFDSSxzQkFBb0IsS0FBYTtRQUFiLFVBQUssR0FBTCxLQUFLLENBQVE7SUFBSSxDQUFDO0lBQ3RDLHVDQUFnQixHQUFoQjtRQUNJLE1BQU0sQ0FBQyxJQUFJLENBQUMsS0FB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