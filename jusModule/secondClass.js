class people {
    constructor(name) {
        this.name = name;
        this.age = 123;
    }
    conSoleAge() {
        console.log(this.age);
    }
    conSoleName() {
        console.log(this.name);
    }
}
class Hong extends people {
    constructor() {
        super('hong');
        console.log(this.name);
        super.conSoleName();
    }
}
class Ming {
    constructor(name) {
        this.Mname = name;
    }
}
let People = new people('P');
let xiaoHong = new Hong();
let xiaoming = new Ming('M');
People = xiaoHong;
class Drinks {
    constructor(name) {
        this.name = name;
        this.name = name;
    }
}
let password = 'heihei';
class Employee {
    get fullName() {
        return this._xxx;
    }
    set fullName(newName) {
        if (password && password == 'heihei') {
            this._xxx = newName;
        }
        else {
            console.log('Error');
        }
    }
}
let employee = new Employee();
employee.fullName = 'heiheihei';
if (employee.fullName) {
    console.log(employee.fullName);
}
class Miss {
    constructor(name) {
        this.name = name;
        console.log(`my name is ${this.name}`);
    }
    makeMiss() {
        console.log(this.name);
    }
}
Miss.state = {
    a: 1,
    b: 2,
    c: 3,
};
class MissShe extends Miss {
    constructor(name) {
        super(name);
        console.log(Miss.state.a);
    }
    makeSound() {
        console.log('hi girl');
    }
    makeOther() {
        console.log('other');
    }
}
;
class MissHe extends Miss {
    constructor(name) {
        super(name);
    }
    makeSound() {
    }
}
let she;
she = new MissShe(`xiaoMing`);
she.makeSound();
let he = new MissHe(`xiaoHong`);
class Department {
    constructor(name) {
        this.name = name;
    }
    printName() {
        console.log('Department name: ' + this.name);
    }
}
class AccountingDepartment extends Department {
    constructor() {
        super('Accounting and Auditing');
    }
    printMeeting() {
        console.log('The Accounting Department meets each Monday at 10am.');
    }
    generateReports() {
        console.log('Generating accounting reports...');
    }
}
let department;
department = new AccountingDepartment();
department.printName();
department.printMeeting();
class Wonder {
    greet() {
        if (this.greeting) {
            return "Hello, " + this.greeting;
        }
        else {
            return Wonder.standardGreeting;
        }
    }
}
Wonder.standardGreeting = "Hello, there";
let first;
first = new Wonder();
console.log(first.greet());
let second = Wonder;
second.standardGreeting = "Hey there!";
let third = new second();
console.log(third.greet());
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2Vjb25kQ2xhc3MuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9jbGFzc+exuy9zZWNvbmRDbGFzcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUdFLFlBQWEsSUFBVztRQUN0QixJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQztRQUNqQixJQUFJLENBQUMsR0FBRyxHQUFHLEdBQUcsQ0FBQztJQUNqQixDQUFDO0lBQ08sVUFBVTtRQUNoQixPQUFPLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQTtJQUN2QixDQUFDO0lBQ1MsV0FBVztRQUNuQixPQUFPLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQTtJQUN4QixDQUFDO0NBQ0Y7QUFFRCxVQUFXLFNBQVEsTUFBTTtJQUN2QjtRQUNFLEtBQUssQ0FBRSxNQUFNLENBQUUsQ0FBQztRQUNoQixPQUFPLENBQUMsR0FBRyxDQUFFLElBQUksQ0FBQyxJQUFJLENBQUUsQ0FBQztRQUV6QixLQUFLLENBQUMsV0FBVyxFQUFFLENBQUM7SUFFdEIsQ0FBQztDQUNGO0FBRUQ7SUFFRSxZQUFhLElBQVc7UUFDdEIsSUFBSSxDQUFDLEtBQUssR0FBRyxJQUFJLENBQUM7SUFDcEIsQ0FBQztDQUNGO0FBQ0QsSUFBSSxNQUFNLEdBQUcsSUFBSSxNQUFNLENBQUUsR0FBRyxDQUFFLENBQUM7QUFFL0IsSUFBSSxRQUFRLEdBQUcsSUFBSSxJQUFJLEVBQUUsQ0FBQztBQU0xQixJQUFJLFFBQVEsR0FBRyxJQUFJLElBQUksQ0FBRSxHQUFHLENBQUUsQ0FBQztBQUUvQixNQUFNLEdBQUcsUUFBUSxDQUFDO0FBb0JsQjtJQUNFLFlBQ1MsSUFBVztRQUFYLFNBQUksR0FBSixJQUFJLENBQU87UUFFbEIsSUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUM7SUFDbkIsQ0FBQztDQUNGO0FBSUQsSUFBSSxRQUFRLEdBQUcsUUFBUSxDQUFDO0FBRXhCO0lB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